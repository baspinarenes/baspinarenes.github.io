<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[Taze mezun birinin yazdığı abidik gubidik blog.]]></description><link>https://enesbaspinar.me</link><generator>GatsbyJS</generator><lastBuildDate>Sun, 30 Jan 2022 11:36:08 GMT</lastBuildDate><item><title><![CDATA[Allah'a Emanet İngilizce Serüvenim]]></title><description><![CDATA[İngilizceye şu ana kadar yaptığım en ciddi şekilde dalıyorum. Yaptıklarımın özetini gün gün buraya kaydedeceğim. Böylece günü gelip…]]></description><link>https://enesbaspinar.me/hayatin-icinden/ingilizce-seruvenim/</link><guid isPermaLink="false">https://enesbaspinar.me/hayatin-icinden/ingilizce-seruvenim/</guid><pubDate>Fri, 14 Jan 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;İngilizceye şu ana kadar yaptığım en ciddi şekilde dalıyorum. Yaptıklarımın özetini gün gün buraya kaydedeceğim. Böylece günü gelip İngilizce’yi öğrendim diyebildiğimde yeni başlamak isteyenler için güzel bir derleme bırakacağımı düşünüyorum.&lt;/p&gt;&lt;h3&gt;14 Ocak 2021 - Gün 1:&lt;/h3&gt;&lt;h5&gt;Dinleme:&lt;/h5&gt;&lt;p&gt;Friends Sezon 1 Bölüm 1’i İngilizce altyazıyla izledim.&lt;/p&gt;&lt;h5&gt;Okuma:&lt;/h5&gt;&lt;p&gt;İngilizce seviyeli hikaye kitabı okudum.&lt;/p&gt;&lt;p&gt;Haftanın günlerinden karıştırdıklarımın da üzerinde durdum. İleride bugün günlerden ne sorusu aklıma geldiğinde kendi kendime İngilizce cevaplayarak kalıcı hale getirmeye çalışacağım.&lt;/p&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Memrise’da Bugünkü hedefimi tamamladım.&lt;/p&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;What’s up?&lt;/strong&gt; =&amp;gt; “Naber?”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Let’s go!&lt;/strong&gt; =&amp;gt; “Hadi gidelim.”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;All right.&lt;/strong&gt; =&amp;gt; “Pekala.” ya da “Tamam.”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;That’s all right.&lt;/strong&gt; =&amp;gt; “Bir şey değil.” ya da “Önemli değil.”&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;Gün içerisinde takip ettiğim kaynaklardan anlamını veya okunuşunu bilmediğim için not aldığım kelimeler:&lt;/p&gt;&lt;div dataName=&quot;wordDictionaries&quot; partName=&quot;day1&quot;&gt;&lt;/div&gt;&lt;h3&gt;15 Ocak 2021 - Gün 2:&lt;/h3&gt;&lt;h5&gt;Dinleme:&lt;/h5&gt;&lt;p&gt;Friends Sezon 1 Bölüm 2’yi İngilizce altyazıyla izledim.&lt;/p&gt;&lt;h5&gt;Grammer:&lt;/h5&gt;&lt;p&gt;Grammer kitabı olarak Essential Grammer In Use kullanıyorum ve 1 gün grammer diğer gün öncekinin tekrarı şeklinde ilerlemeyi planlıyorum. Bugün Bölüm 1-2’deki am-is-are ve question words konularına çalıştım.&lt;/p&gt;&lt;p&gt;Okulda öğrendiğimiz üzere yaşımızı belirtmek için &lt;em&gt;I’m 22 years old.&lt;/em&gt; kalıbını kullanılıyoruz. Ancak bunu &lt;em&gt;I’m 22.&lt;/em&gt; olarak da söyleyebileceğimizi öğrendim.&lt;/p&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;on time&lt;/strong&gt; =&amp;gt; “tam zamanında”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;What’s the time?&lt;/strong&gt; =&amp;gt; “Saat kaç oldu?”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Sure!&lt;/strong&gt; =&amp;gt; “Elbette!” ya da “Tabii ki!”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;I am sorry.&lt;/strong&gt; =&amp;gt; “Üzgünüm.” ya da “Özür dilerim.”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;See you later.&lt;/strong&gt; =&amp;gt; “Görüşürüz.” ya da “Sonra görüşürüz.”&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da hedefimi Yoğun (günlük 20 dk) olarak belirledim ve Ünite 1’deki Temeller 1’in ilk düzeyini tamamladım. Genel olarak temel kelimeler, geniş zaman ve the/a/an kullanımı üzerinde ilerliyor. Memrise’da Level 1’i tamamladım.&lt;/p&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;Gün içerisinde takip ettiğim kaynaklardan anlamını veya okunuşunu bilmediğim için not aldığım kelimeler:&lt;/p&gt;&lt;div dataName=&quot;wordDictionaries&quot; partName=&quot;day2&quot;&gt;&lt;/div&gt;&lt;h3&gt;16 Ocak 2021 - Gün 3:&lt;/h3&gt;&lt;h5&gt;Dinleme:&lt;/h5&gt;&lt;p&gt;Friends Sezon 1 Bölüm 3’ü İngilizce altyazıyla izledim.&lt;/p&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Günün çoğunda dışarıda olduğumdan pek ilgilenemedim, sadece yoldayken mobil uygulamalar ile çalışabildim. Bölüm 1’in Temeller 1 kısmını Düzey 3’e gelene kadar tekrarladım. Temeller 2 ve İfadeler kısımlarına başlayarak Düzey 1’e geldim. Burada devreye I, You, We, They girmeye başladı ve has-have kavramını pekiştirdim. Bu arada has-have gibi çoğu konuya okuldan hakim olsam dahi kullanabilecek düzeyde değilim.&lt;/p&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;How about you?&lt;/strong&gt; =&amp;gt; “Peki ya sen?” ya da “Sen nasılsın?”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;You are welcome.&lt;/strong&gt; =&amp;gt; “Rica ederim.” ya da “Bir şey değil.”&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;Gün içerisinde takip ettiğim kaynaklardan anlamını veya okunuşunu bilmediğim için not aldığım kelimeler:&lt;/p&gt;&lt;div dataName=&quot;wordDictionaries&quot; partName=&quot;day3&quot;&gt;&lt;/div&gt;&lt;h3&gt;17 Ocak 2021 - Gün 4:&lt;/h3&gt;&lt;h5&gt;Dinleme:&lt;/h5&gt;&lt;p&gt;Friends Sezon 1 Bölüm 4’ü İngilizce altyazıyla izledim.&lt;/p&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da Temeller 1’i tamamladım. Temeller 2 ve İfadeler bölümlerinde ise Düzey 2’yi tamamladım.&lt;/p&gt;&lt;h3&gt;18 Ocak 2021 - Gün 5:&lt;/h3&gt;&lt;p&gt;Yoğun olduğumdan dolayı bugün mola verdim.&lt;/p&gt;&lt;h3&gt;19 Ocak 2021 - Gün 6:&lt;/h3&gt;&lt;h5&gt;Dinleme:&lt;/h5&gt;&lt;p&gt;Friends Sezon 1 Bölüm 5’i İngilizce altyazıyla izledim.&lt;/p&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da Temeller 2 ve İfadeler bölümlerini tamamladım. Memrise’da Level 2’yi tamamladım.&lt;/p&gt;&lt;h3&gt;20 Ocak 2021 - Gün 7:&lt;/h3&gt;&lt;p&gt;Zorunlu hastalık arası vermek durumunda kaldım 🤒&lt;/p&gt;&lt;h3&gt;21 Ocak 2021 - Gün 8:&lt;/h3&gt;&lt;h5&gt;Grammer:&lt;/h5&gt;&lt;p&gt;“Articles” konusunu bir çok video ile pekiştirdim. Bir tanesini önermem gerekirse Çağrı hocanın gerçekten çok temiz bir anlatımı var.&lt;/p&gt;&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom:56.25%;position:relative;height:0;overflow:hidden;margin-bottom:1.0725rem&quot;&gt; &lt;iframe src=&quot;https://www.youtube.com/embed/2joNMBefimA&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;p&gt;Aynı zamanda bu konuya bakarken “Countable &amp;amp; Uncountable Noun” konusunun zihnimde çok net olmadığını farkederek o eksikliği de giderdim. Aşağıdaki videoyu tavsiye edebilirim.&lt;/p&gt;&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom:56.25%;position:relative;height:0;overflow:hidden;margin-bottom:1.0725rem&quot;&gt; &lt;iframe src=&quot;https://www.youtube.com/embed/z755q3PjNbo&quot; title=&quot;YouTube video player&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da bir yanlışımı farkettim. Bir günde bir bölüm (6 düzey) bitirmeye uğraşıyordum ancak daha fazla verim almak adına değişikliğe gittim. Artık farklı bölümlerden günlük 3 düzey bitireceğim. Böylece aralıklı tekrar metodunu çalışmama yedirmeyi hedefliyorum. Yemekler, Hayvanlar ve Çoğullar bölümlerin Düzey 1’ini tamamladım.&lt;/p&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;have breakfast&lt;/strong&gt; =&amp;gt; “Kahvaltı yapmak”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;have dinner&lt;/strong&gt; =&amp;gt; “Akşam yemeği yemek”&lt;/li&gt;&lt;li&gt;Eğer et türlerinden bahsetmiyorsak &lt;strong&gt;meat&lt;/strong&gt; kelimesi uncountable’dır.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;news&lt;/strong&gt; kelimesi uncountable olduğundan sanılanın aksine çoğul değildir.&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;Gün içerisinde takip ettiğim kaynaklardan anlamını veya okunuşunu bilmediğim için not aldığım kelimeler:&lt;/p&gt;&lt;div dataName=&quot;wordDictionaries&quot; partName=&quot;day8&quot;&gt;&lt;/div&gt;&lt;h3&gt;22 Ocak 2021 - Gün 9:&lt;/h3&gt;&lt;h5&gt;Grammer:&lt;/h5&gt;&lt;p&gt;Simple Present konusunun Grammer in Use’daki kısımlarını tamamladım ve video ile pekiştirdim:&lt;/p&gt;&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom:56.25%;position:relative;height:0;overflow:hidden;margin-bottom:1.0725rem&quot;&gt; &lt;iframe src=&quot;https://www.youtube.com/embed/u6UN4gBJO1c&quot; title=&quot;YouTube video player&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da Yemekler, Hayvanlar ve Çoğullar konularında Düzey 3’ü tamamladım. Memrise’da Level 3’ü tamamladım.&lt;/p&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;have&lt;/strong&gt; ve &lt;strong&gt;has&lt;/strong&gt; sözcüklerini kullanırken objeyi &lt;strong&gt;the&lt;/strong&gt; ile nitelersek anlam değişir. Örneğin “I have the book.” ve “Kitap bende” anlamına gelir.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;be wrong&lt;/strong&gt; =&amp;gt; “Haksız olmak”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Am I wrong?&lt;/strong&gt; =&amp;gt; “Haksız mıyım?”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;You’re right.&lt;/strong&gt; =&amp;gt; “Haklısın.”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Go ahead!&lt;/strong&gt; =&amp;gt; “Buyrun!”, “Siz buyrun!”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;What do you do?&lt;/strong&gt; =&amp;gt; “Hangi işle meşgulsün?”&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;good&lt;/strong&gt;, &lt;strong&gt;fine&lt;/strong&gt; ve &lt;strong&gt;well&lt;/strong&gt; kelimelerini tamamı “iyi” anlamına geldiğini biliyordum ama hangisini kullanacağımı kestiremiyordum. Bunları kafamda şu şekilde oturttum:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;good:&lt;/strong&gt; bir özelliğin iyi olması&lt;/li&gt;&lt;li&gt;&lt;strong&gt;fine:&lt;/strong&gt; sağlık ve ruh durumunun iyi olması&lt;/li&gt;&lt;li&gt;&lt;strong&gt;well:&lt;/strong&gt; sağlık ve ruh durumunun çok daha iyi olması&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Ve de &lt;strong&gt;little&lt;/strong&gt;, &lt;strong&gt;a little&lt;/strong&gt;, &lt;strong&gt;few&lt;/strong&gt; ve &lt;strong&gt;a few&lt;/strong&gt; farkını araştırdım:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;few:&lt;/strong&gt; çoğullar için - neredeyse hiç. &lt;em&gt;I have few friends, so I’m alone.&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;little:&lt;/strong&gt; uncountable için - neredeyse hiç. &lt;em&gt;They have little money, so they’re poor.&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;a few:&lt;/strong&gt; çoğullar için - biraz, azıcık. &lt;em&gt;I have a few friends, so I’m not alone.&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;a little:&lt;/strong&gt; uncountable için - biraz, azıcık. &lt;em&gt;They have a little money, so they’re not poor.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Gün içerisinde takip ettiğim kaynaklardan anlamını veya okunuşunu bilmediğim için not aldığım kelimeler:&lt;/p&gt;&lt;div dataName=&quot;wordDictionaries&quot; partName=&quot;day9&quot;&gt;&lt;/div&gt;&lt;h3&gt;23 Ocak 2021 - Gün 10:&lt;/h3&gt;&lt;h5&gt;Grammer:&lt;/h5&gt;&lt;p&gt;Grammer in Use’da Have/Has ve Present Continuous konusunu tekrarladım. Bu sefer farklı bir kanal önereceğim. Bu abimizin tarzı beklediğimiz gibi çok resmi değil, insanı bunaltıyor. Bir miktar argo (biraz da küfür) katarak eğlenceli videolar sunuyor:&lt;/p&gt;&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom:56.25%;position:relative;height:0;overflow:hidden;margin-bottom:1.0725rem&quot;&gt; &lt;iframe src=&quot;https://www.youtube.com/embed/hUGM8Gjl7Hg&quot; title=&quot;YouTube video player&quot; frameBorder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;at the moment&lt;/strong&gt; =&amp;gt; “şu anda”&lt;/li&gt;&lt;li&gt;&lt;strong&gt;It’s okay.&lt;/strong&gt; =&amp;gt; “Önemli değil.” ya da “Sorun değil.”&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;Okuma:&lt;/h5&gt;&lt;p&gt;İngilizce seviyeli hikaye kitabı okudum.&lt;/p&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;Gün içerisinde takip ettiğim kaynaklardan anlamını veya okunuşunu bilmediğim için not aldığım kelimeler:&lt;/p&gt;&lt;div dataName=&quot;wordDictionaries&quot; partName=&quot;day10&quot;&gt;&lt;/div&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da Yemekler, Hayvanlar ve Çoğullar konularını Düzey 5’e tamamladım. Memrise’da Level 4’ü tamamladım.&lt;/p&gt;&lt;h3&gt;24 Ocak 2021 - Gün 11:&lt;/h3&gt;&lt;h5&gt;Okuma:&lt;/h5&gt;&lt;p&gt;İngilizce seviyeli hikaye kitabı okudum. Garip şekilde bilmediğim kelime çıkmadı karşıma, çok rahat okudum.&lt;/p&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da Sahiplik ve Nesne Zamiri konularının Düzey 1’lerini tamamladım. Memrise’da Level 5’i tamamladım.&lt;/p&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;have a bath&lt;/strong&gt; =&amp;gt; “yıkanmak”&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;25 Ocak 2021 - Gün 12:&lt;/h3&gt;&lt;p&gt;Bugünü tatil ilan ettim. Mola iyidir.&lt;/p&gt;&lt;h3&gt;26 Ocak 2021 - Gün 13:&lt;/h3&gt;&lt;h5&gt;Grammer&lt;/h5&gt;&lt;p&gt;Çoğul kelimelere gelen iyelik ekini kesme işaretiyle yazarız: &lt;em&gt;I’m going to my friends’ house.&lt;/em&gt;&lt;/p&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;Gün içerisinde takip ettiğim kaynaklardan anlamını veya okunuşunu bilmediğim için not aldığım kelimeler:&lt;/p&gt;&lt;div dataName=&quot;wordDictionaries&quot; partName=&quot;day13&quot;&gt;&lt;/div&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da Sahiplik, Nesne Zamirleri ve Giyim konularını Düzey 5’e tamamladım.&lt;/p&gt;&lt;h3&gt;27 Ocak 2021 - Gün 14:&lt;/h3&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Duolingo’da Geniş Zaman ve Renkler konularını Düzey 5’e tamamladım.&lt;/p&gt;&lt;h3&gt;28 Ocak 2021 - Gün 15:&lt;/h3&gt;&lt;h5&gt;Kelime:&lt;/h5&gt;&lt;p&gt;Bugün bazı kelimeler arasındaki farkları araştırdım. Bunlardan ilki &lt;strong&gt;wear&lt;/strong&gt; ve &lt;strong&gt;dress&lt;/strong&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;wear&lt;/strong&gt;: kıyafetler halihazırda üzerinde olma eylemidir. &lt;em&gt;My friend is wearing a hat.&lt;/em&gt; (şu anda kafasında şapka var)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;dress&lt;/strong&gt;: bir şeyin üzerine kıyafet geçirme eylemidir. &lt;em&gt;My friend is dressing a hat.&lt;/em&gt; (o esnada kafasına takıyor)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Diğer araştırmamda ise &lt;strong&gt;tell&lt;/strong&gt;, &lt;strong&gt;speak&lt;/strong&gt;, &lt;strong&gt;say&lt;/strong&gt; ve &lt;strong&gt;talk&lt;/strong&gt; kelimelerinin farkına baktım.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;say&lt;/strong&gt;: söylemek - bir şeyi kelimelerle ifade etmek. &lt;em&gt;Can you say your name again?&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;tell&lt;/strong&gt;: söylemek - bir kişiye bilgi vermek - fiilden sonra söylenen kişi belirtmeli. &lt;em&gt;Tell him to meet us here.&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;speak&lt;/strong&gt;: konuşmak - tek taraflı konuşma. &lt;em&gt;My teacher is speaking very well.&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;talk&lt;/strong&gt;: konuşmak - karşılıklı konuşma. &lt;em&gt;We talk on the phone every week.&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Seviye 5 olan tüm konuları Efsanevi düzeye tamamladım ve böylece 1. Üniteyi tamamlamış oldum.&lt;/p&gt;&lt;p&gt;Ekstra notlarım;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;have&lt;/strong&gt;/&lt;strong&gt;has&lt;/strong&gt; sözcüklerini iyelik almış bir isimle kullanırsak özel bir anlam ifade ediyor. &lt;em&gt;I have your hats.&lt;/em&gt; cümlesi “Şapkaların bende.” demek.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;29 Ocak 2021 - Gün 16:&lt;/h3&gt;&lt;h5&gt;Grammer&lt;/h5&gt;&lt;p&gt;Grammeri nadasa bıraktım. Şuana kadar “Articles”, “Çoğullar”, “Have/Has”, “Present Simple”, “Present Continous”, “Possesives” konularını tamamladım ama çoook alıştırma gerekiyor. Yarından itibaren bunları günlük hayatımda kullanarak tekrara girişeceğim.&lt;/p&gt;&lt;h5&gt;Dinleme&lt;/h5&gt;&lt;p&gt;Harry Potter izleyesim vardı kendime sebep yaratıp İngilizce altyazıyla ilk iki filmini izledim.&lt;/p&gt;&lt;h5&gt;Mobil Uygulamalar:&lt;/h5&gt;&lt;p&gt;Bugün Duolingo hikayelerine giriştim. Çok güzel hazırlanmışlar okurken eğlendim. Grup 1 ve Grup 2 hikayelerini tamamladım.&lt;/p&gt;&lt;h2&gt;Kullandığım Kaynaklar&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://dictionary.cambridge.org/tr/&quot;&gt;Cambridge Dictionary&lt;/a&gt; - Kelimelerin kullanımını ve seviyelerini gösteren muazzam sözlük.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://dersimizingilizce.com/gramer-grammer-ingilizce-gramer.html&quot;&gt;Dersimiz İngilizce&lt;/a&gt; - Grammer konularını yazılı kaynaktan takip etmek, bir çok örnek cümle görmek ve konuya dair testler çözmek isteyenler için güzel bir site.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://tr.forvo.com/&quot;&gt;Forvo&lt;/a&gt; - Kelimelerin bir çok kişi tarafından telaffuz edilmiş ses kayıtlarını barındıran site.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.memrise.com/tr/&quot;&gt;Memrise&lt;/a&gt; - Günlük hayattan işe yarar kelimeleri ve ifadeleri yerli konuşmacıların videolarıyla öğreten dil platformu. Aynı zamanda aralıklı tekrarlama yöntemini kullanıyor.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.usingenglish.com/&quot;&gt;UsingEnglish.com&lt;/a&gt; - İngilizce grammer tesleri ve çeşitli araçlar.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://learnenglish.britishcouncil.org/&quot;&gt;British Council&lt;/a&gt; - İngilizce dinleme, okuma, yazma ve konuşma skilleri için kaynaklar sunuyor.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bilimin İnançla Harmanlanması: Fuat Sezgin]]></title><description><![CDATA[24 Ekim 1924 yılında Bitlis'te doğdum. Babam Mehmet bey, annem Cemile hanım ve üç kardeşimle birlikte altı kişilik bir ailede büyüdüm. Babam…]]></description><link>https://enesbaspinar.me/hayatin-icinden/fuat-sezgin/</link><guid isPermaLink="false">https://enesbaspinar.me/hayatin-icinden/fuat-sezgin/</guid><pubDate>Tue, 01 Jun 2021 00:00:00 GMT</pubDate><content:encoded>&lt;div&gt;Biraz sonra okuyacağınız yazı, Fuat Sezgin hocamızın verdiği demeçlerde sarfettiği sözlerin ve hakkındaki bilgilerin kendisi tarafından kaleme alınmış gibi aktarıldığı bir yazıdır. Bu şekilde yazmamın sebebi ise bu mühim hayat hikayesinin yapay bir dil kullanarak tadını kaçırmadan, tüm samimiyetiyle anlaşılmasını sağlamaktır. Amacım; Fuat Sezgin&amp;#x27;in kendisini adadığı davayı herkesin anlamasına ve harekete geçmesine bir nebze de olsa katkı sağlayabilmektir.&lt;/div&gt;&lt;div position=&quot;left&quot; src=&quot;fuat-sezgin-001.webp&quot; caption=&quot;Fuat Sezgin&amp;#x27;in Gençliği&quot; reference=&quot;https://fuatsezginetkinlikleri.istanbul.edu.tr/tr/content/prof-dr-fuat-sezgin/prof.-dr.-fuat-sezgin&quot;&gt;&lt;/div&gt;&lt;p&gt;24 Ekim 1924 yılında Bitlis’te doğdum. Babam Mehmet bey, annem Cemile hanım ve üç kardeşimle birlikte altı kişilik bir ailede büyüdüm. Babam, çocukluğumda daima ilmin ne kadar önemli olduğunu anlatır, çalışmanın ise bir ibadet olduğunu söylerdi. Bu bilinçle birlikte, yedi yaşımda ilkokula başladım. Ardından fen lisesini bitirdim. Okul sıralarında cihan imparatorluğuna sahip bir millet olmamıza rağmen bilimde anlatılan her şeyin daima yabancılar tarafından bulunduğunu fark ettim. Bu beni kamçıladı. Matematiği sevmem münasebetiyle mühendis olmak istiyordum. Hayallerim büyüktü. Bunları gerçekleştirmek adına İstanbul Üniversitesi’ne kaydoldum.&lt;/p&gt;&lt;div position=&quot;right&quot; src=&quot;fuat-sezgin-002.webp&quot; caption=&quot;Hellmut Ritter&quot; reference=&quot;https://iosminaret.org/vol-13/issue5/Fuat_Sezgin.php&quot;&gt;&lt;/div&gt;&lt;p&gt;O sıralar Edebiyat okuyan akrabalarımdan biri, fakültede büyük bir Alman alimin seminerinin olacağından bahsederek birlikte gitmeyi teklif etti. Halbuki ben mühendis olma sevdasındaydım. Ancak onu kıramayarak kabul ettim. Seminerin sonunda söylediği şeyden o kadar etkilenmiştim ki hayata bakışım tamamen değişti: ”&lt;strong&gt;Modern bilimlerin temeli, İslam bilimlerine dayalıdır.&lt;/strong&gt;” Ben artık mühendis olma sevdasını bırakmış, o alimin talebesi olup İslam bilimleri tarihini araştırmak için can atıyordum. Bu sebeple, kayıt zamanı geçmiş olmasına rağmen dekanın yanına gittim. Dekanın odasında bulunduğum sırada şans eseri o büyük alim odaya girdi. Dekan, hocaya dönerek, &lt;em&gt;“Ritter bey, talebeniz olmak isteyen bir gençle konuşuyorum.”&lt;/em&gt; dedi. Hoca bana şöyle bir baktı ve, &lt;em&gt;“Niye gelmek istiyorsunuz?”&lt;/em&gt; diye sordu. Bense, &lt;em&gt;“Sizin seminerinize gelmiştim, talebeniz olmak istiyorum.”&lt;/em&gt; dedim. Ardından bana dönerek, &lt;em&gt;“Çok zor bir şeye talipsiniz. Bu iş bir iki lisanla olmaz, çok fazla dil öğreneceksiniz.”&lt;/em&gt; dedi. &lt;em&gt;“Gayret edeceğim.”&lt;/em&gt; dedim. Tebessüm ederek, &lt;em&gt;“Peki.”&lt;/em&gt; dedi.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-003.webp&quot; caption=&quot;1940&amp;#x27;lı yıllarda İstanbul Üniversitesi&quot; reference=&quot;https://www.forumsahane.com/nostalji/13504-istanbul-universitesi-beyazit-kampusu-1940-a.html&quot;&gt;&lt;/div&gt;&lt;p&gt;1943 yılında İstanbul Üniversitesi Edebiyat Fakültesi Arap ve Fars Filolojisi alanına kaydolarak alanında tanınmış bir oryantalist olan &lt;strong&gt;Hellmut Ritter&lt;/strong&gt;‘in talebesi oldum. Gerçekten de zor bir hocaydı, talebeleri seminerlerinden kaçardı. Genelde 3-4 kişi gelirdi, çoğu zaman ise bir tek ben olurdum. Böylece serüvenim başlamış oldu, artık ömrümün sonuna kadar yitik bir hazinenin peşinde olacaktım.&lt;/p&gt;&lt;p&gt;Ertesi haftaki seminerine 3 dakika geç katılmıştım. Cebinden saatini çıkararak, “3 dakika geciktiniz, bu tekerrür etmemeli!” dedi. Hocama sadece tamam demekle yetinmedim, hakikaten o günden sonra bütün hayatımda randevularıma gecikmeme prensibine azami dikkat ettim.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-004.webp&quot; caption=&quot;Çalışmaları esnasında Fuat Sezgin&quot; reference=&quot;https://www.aa.com.tr/tr/turkiye/prof-dr-fuat-sezginin-almanyada-el-konulan-kitaplari-icin-uzlasmaya-gidildi/1894657&quot;&gt;&lt;/div&gt;&lt;p&gt;Bir öğrenciye göre fazla çalıştığımı düşünüyordum. Konuşmamızda bahsi geçmesi üzerine Helmutt Ritter günde kaç saat çalıştığımı sordu. Günde 13-14 saat çalıştığımı söyledim. Bunun üzerine hocam, &lt;em&gt;“Bu tempoyla alim olamazsınız. Eğer alim olmak istiyorsan buna birkaç saat daha eklemen gerekir.”&lt;/em&gt; dedi. Kendisi ise günde 20 saat çalışırdı. O konuşmadan sonra 70 yaşıma kadar günde 17 saat çalıştım.&lt;/p&gt;&lt;p&gt;O sıralar İkinci Dünya Savaşı’nda Naziler Türkiye sınırına dayanmıştı. Bu sebeple üniversite bir süreliğine tatil edildi. Ritter bize bu uzun arayı değerlendirmemizi ve Arapça öğrenmemizi tavsiye etti. Bende 6 ay boyunca &lt;strong&gt;Cerîr et-Taberî&lt;/strong&gt;’nin tefsirini Türkçe meali ile karşılaştırak Arapça’yı ana dilim gibi öğrendim. Helmut Ritter, &lt;strong&gt;Gazzâlî&lt;/strong&gt;‘nin İhyâu Ulûmi´d-Dîn kitabını önüme koyduğunda kolayca okumamdan çok memnun kaldı. Bana dil öğrenmede yetenekli olduğumu söyledi ve beş dile aynı anda başlayarak her yıl yeni bir dil eklememi tavsiye etti.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-005.webp&quot; caption=&quot;İbn-i Sina&amp;#x27;nın kaleminden yazma örnekleri&quot; reference=&quot;https://derinceibnisinailkokulu.meb.k12.tr/icerikler/ibn-i-sina-kimdir_5589766.html&quot;&gt;&lt;/div&gt;&lt;p&gt;İstanbul’da o zamanlar 200 binden fazla yazma vardı ve hemen hepsini görmek lazımdı. Ancak bunun için kütüphanelerin açık kaldığı süreler yetmiyordu. Kütüphanelerin temizlik günlerine gidiyordum. Kütüphanecilerden rica ederek eserlere raftan indirildiği esnada göz atıyor, önemlileri kaydedip bir dahaki gidişimde inceliyordum. Yazmalarda okuduklarımdan çok etkilenmiştim. O güne kadar aldığım eğitimlerde, Müslüman alimlerin dünyanın öküzün boynuzunda olduğuna inandığı gibi gerçekdışı şeyler öğretilmişti. Ancak durum çok farklıydı. 20. yüzyılın başlarında Avrupalı bilim insanları tarafından atomun parçalanabileceği görüşü ortaya konmuştu. Oysa ki Müslüman kimyacı &lt;strong&gt;Câbir bin Hayyan&lt;/strong&gt;, atomun parçalanabileceğini, parçalandığında ise Bağdat gibi büyük bir şehri yok edebilecek enerji açığa çıkarabileceğini 8. yüzyılda dile getirmişti. 9. yüzyılda &lt;strong&gt;Halife Memûn&lt;/strong&gt;‘un kurduğu &lt;strong&gt;Beyt’ül Hikmet&lt;/strong&gt;‘de insanlık tarihinin en eski haritası çizilmiş ve bu haritanın Portekizce çevirisiyle Kristof Kolomb Amerika kıtasına gitmişti. Ancak bu sanıldığının aksine keşif değildi. Halihazırda zaten Batı Afrikalı Müslümanlar bu kıtaya ticari faaliyetler için defalarca gelmişlerdi. &lt;strong&gt;El-Zehravi&lt;/strong&gt;‘nin 10. yüzyılda yazdığı tıp ansiklopedisi Kitabu’t-Tasrif ve ürettiği cerrahi aletler, 18. yüzyıla kadar Avrupa’da çok rağbet görmüştü. Bu gibi bir çok örneği göz önüne alarak Batı medeniyetinin temelinde Yunan değil İslam medeniyetinin olduğunu tespit ettim. Yanlış kanı düzeltilmeli, yapılan katkılar gün yüzüne çıkarılmalıydı. Yitik kahramanlar ve onların hazineleri herkes tarafından bilinmeliydi.&lt;/p&gt;&lt;div position=&quot;right&quot; src=&quot;fuat-sezgin-006.webp&quot; caption=&quot;Arap Edebiyatı Tarihi&quot; reference=&quot;https://www.bookdepository.com/Geschichte-der-Arabischen-Litteratur-6-vol-set-Carl-Brockelmann/9789004230262&quot;&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Karl Brockelmann&lt;/strong&gt;‘ın, ki kendisi benim hocamın da hocasıydı, &lt;strong&gt;Arap Edebiyatı Tarihi&lt;/strong&gt; isimli beş ciltlik bir eseri vardı. Hocam, seminerlerinde ara sıra Brockelmann’ın kitabının birçok noksan yanının olduğunu ve birisinin artık hiç olmazsa İstanbul’daki yazmalara dayanarak bunları gidermesi gerektiğini söylerdi. Bunu söylerken de bana bakardı. Ben de içimden, &lt;em&gt;“Bunu ben yapacağım.”&lt;/em&gt; derdim. Ancak baktığımda eksikler giderilebilecek gibi değildi. Ben de yeni baştan bir kitap yazma fikrimi geliştirmeye başladım. Epeyce mesafe katettiğim sırada hocama, &lt;em&gt;“Brockelmann’ın kitabını düzenlemek değil, dünyadaki bütün yazmalara bakarak yeni bir kitap yazmak istiyorum.”&lt;/em&gt; dedim. Bana, &lt;em&gt;“Onu yapamazsınız. Bunu hiç kimse yapamaz.”&lt;/em&gt; dedi. Bense içimden, &lt;em&gt;“Hocam ben bunu yapacağım.”&lt;/em&gt; diyordum.&lt;/p&gt;&lt;p&gt;Belki 60 ülkenin kütüphanelerini gezdim ve bütün Avrupa’nın kütüphanelerini gördüm. Fas’tan Kahire’ye kadar bütün Kuzey Afrika’nın, Suriye’nin ve İran’ın kütüphanelerini gördüm. Hindistan, Rusya ne varsa bütün ihtimalleri denedim. Mübalağa değil yaklaşık 400 bin cilde yakın yazma gördüm ve bunları kendi dillerinde okudum.&lt;/p&gt;&lt;p&gt;Batılılar, Müslüman bilim adamlarının çalışmalarından yararlanarak çok sayıda çalışma yapsalar da bulundukları dönemin şartlarında yararlandıkları kaynakları dipnot olarak eklememişlerdi. Ancak Müslümanların bilim tarihinde 800 yıl süren önemli bir rolü vardı. Avrupalıların kendilerini üstün görmesi ise 17. yüzyıldan itibarendi. Bu beni rahatsız etti ve üzerine gittim. 10 yıl kadar süren çalışmalarım sonucunda birçok belge ve kanıt topladım. Dünya bilim tarihini alt üst edecek kaynağı biriktirmiştim. Geriye düşlediğim eşsiz eserimi yazmak ve bilim dünyasına sunmak kalmıştı.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-007.webp&quot; reference=&quot;https://www.islamveihsan.com/fuat-sezginin-basarilarla-dolu-hikayesi.html&quot;&gt;&lt;/div&gt;&lt;p&gt;Ritter 1949 yılında bir süreliğine Frankfurt’a dönmek zorunda kalmıştı ancak bu beni durdurmadı. Bana gösterdiği yoldan devam ederek doktora tezimi, &lt;strong&gt;Mecazu’l-Kur’ân&lt;/strong&gt; tefsiri üzerine 1950 yılında tamamladım. 1956 yılında henüz otuzlu yaşlarımın başında iken Buhari’nin sadece sözlü kaynaklara değil yazılı kaynaklara da dayandığı tezini ortaya koyduğum doçentlik tezim &lt;strong&gt;Buhari’nin Kaynakları&lt;/strong&gt;‘nı yayınladım. Bu tezle birlikte; &lt;strong&gt;Buhari&lt;/strong&gt;’nin yazılı kaynaklara da başvurmuş olduğunu, hadis derlemelerinin yalnızca sözlü geleneğe dayandığına dair önceki tezlerin yanlış olduğunu kanıtlamış oldum. Bu her şeyi değiştirirdi.&lt;/p&gt;&lt;p&gt;Günlerden bir gün yine enstitüye doğru yola çıkmıştım. Yolda giderken bir ses işittim, &lt;em&gt;“Yazıyor yazıyor, 147 profesörün üniversiteden atıldığını yazıyor.”&lt;/em&gt; Bir gazete aldım ve listede ismimin geçtiğini gördüm. Yorulmak bilmeden ilerlediğim bu yolculuk, 27 Mayıs 1960 darbesiyle sekteye uğramıştı. Amerika ve Almanya’daki dostlarıma birkaç mektup yazarak yanlarında çalışmak üzere yerleri olup olmadığını sordum. Üç üniversiteden cevap geldi. Frankfurt, Berkeley ve Yale Üniversiteleri. &lt;strong&gt;İslam Bilimleri Tarihi&lt;/strong&gt; kitabım için malzeme toplama işim henüz bitmemişti ve İstanbul’dan uzaklaşmak istemiyordum. Doğudan uzaklaşmak istemiyordum. Çünkü daha toplamam gereken bir sürü malzeme vardı. 1961 yılında dünyadaki tek bilimler tarihi enstitüsünün bünyesinde olması ve müdürünün de dostum olması sebebiyle &lt;strong&gt;Frankfurt Üniversitesi&lt;/strong&gt;‘ni seçtim. Ayrılmadan önceki son gece Galata Köprüsü’ne gittim. Yarım saat kadar düşündüm. Sevdiğim İstanbul’dan ayrı nasıl yaşayacağımı, memleketimin neden bu halde olduğunu düşündüm. O yarım saatlik anı ve nemli gözlerle oradan ayrılışımı ömrüm boyunca hiç unutmadım.&lt;/p&gt;&lt;p&gt;Küçük bir valiz hazırladım. Yanıma birkaç parça elbise ve yazmak istediğim kitap için yıllar boyunca biriktirdiğim 25 bine yakın bilgi fişini aldım. Çocukça bir korkuyla meçhul bir dünyaya ve hayata gidiyordum. Nasıl olacaktı, bilmiyordum.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-008.webp&quot; caption=&quot;1940&amp;#x27;lı yıllarda Galata Köprüsü&quot; reference=&quot;https://twitter.com/hayalleme/status/968386717765066752?s=20&quot;&gt;&lt;/div&gt;&lt;p&gt;1961 yılında Frankfurt Üniversitesi’nde misafir Doçent olarak çalışmaya başladım ve 1965 yılında ise &lt;strong&gt;Bilimler Tarihi Profesörü&lt;/strong&gt; ünvanını aldım. Aynı tarihte ömrümü adayacağım eserimin birinci cildini yazmaya başladım. Bu esnada hayatımın belki de en mühim hadiselerinden biri olan tesadüfü yaşadım. Müslüman olmuş bir Alman olan meslektaşım &lt;strong&gt;Dr. Ursula Hanım&lt;/strong&gt; ile tanıştım ve ona aşık oldum.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Arap-İslam Bilimler Tarihi&lt;/strong&gt; kitabının ilk cildini eşim Ursula Hanımın da katkılarıyla, yoğun ve yorucu bir çalışmanın ardından 1967’de bitirdim. Yıllar önce bunu hiç kimse yapamaz diyen ve o yıllarda İstanbul’da olan hocama gönderdim. Hocam, uzun bir süre kitabı inceledikten sonra gönderdiği mektupta, &lt;em&gt;“Hiç kimse böyle bir kitap yazamadı. Bunu sizden başka hiç kimse de yazamaz.”&lt;/em&gt; diyerek tebrikte bulunuyordu.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-009.webp&quot; reference=&quot;https://perspektif.eu/2018/03/01/frankfurtta-fuat-sezgin-kitaplarina-el-konuldu&quot;&gt;&lt;/div&gt;&lt;p&gt;1978 yılında Kral Faysal Vakfı’ndan aldığım ödül ve çalışmalarım sayesinde edindiğim
bağlantılarla birlikte önce bir vakıf sonrasında ise Frankfurt Üniversitesi çatısı
altında &lt;strong&gt;Arap-İslam Bilimler Tarihi Enstitüsü&lt;/strong&gt;‘nü kurduk. Ancak yeterli değildi,
kitabi bilgi uçardı. Bunların görülmesi ve sindirilmesi lazımdı. Alman fizikçi &lt;strong&gt;Eilhard
Wiedemann&lt;/strong&gt;, 1900 yılında Müslüman bilim insanları tarafından icat edilen aletleri
tanıtmak amacıyla aslına uygun olarak modellemeye başlamıştı. Hayatının yaklaşık
30 yılında sadece beş aletin modelini yapmayı başarabilmişti. &lt;em&gt;“Acaba 30 aleti yapmayı
başarabilir miyim?”&lt;/em&gt;, &lt;em&gt;“Bir müze olmasa bile bir odayı doldurabilir miyim?”&lt;/em&gt; düşünceleri
ile başladığım çalışmalar sonucunda 700’den fazla aleti modelledim. Bu benim tasavvur
edemeyeceğim kadar fazla oldu. 1983 yılında ise bu maketleri sergilemek üzere Frankfurt’ta
bir müze açtım.&lt;/p&gt;&lt;p&gt;O yıllarda bilimler tarihi alanında bir de kütüphane kurdum. Alanında dünyada tek olma özelliğine sahip kütüphanede, dünyanın farklı yerlerinden satın aldığım 45 bin cilt kitap vardı. Avrupalıların rağbeti olmasına rağmen benim hedefim milletimin bunları bilmesi ve tarihinden güç almasıydı. Bir yandan enstitünün işleri ile uğraşıyor, bir yandan müzeyle ilgileniyor, bir yandan da &lt;strong&gt;Arap-İslam Bilimler Tarihi&lt;/strong&gt; kitabının diğer ciltlerini yazıyordum. Kitap, 17 ciltten oluşacaktı.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-010.webp&quot; caption=&quot;İstanbul Arap-İslam Bilimleri Tarihi Müzesi&quot;&gt;&lt;/div&gt;&lt;p&gt;2008 yılına geldiğimizde Türkiye’den bir telefon aldım. İstanbul’da da &lt;strong&gt;Arap İslam Bilimleri Tarihi Müzesi&lt;/strong&gt; açalım deniliyordu. Bu telefon karşısında büyük bir heyecan yaşadım, nihayet hedefimi gerçekleştirebilecektim. İstanbul’a vardığımda ömrümü adadığım milletim tarafından büyük bir sevgiyle karşılanmanın gururunu yaşadım. &lt;strong&gt;Gülhane Parkı&lt;/strong&gt;‘nda yaklaşık 600 eserin modeli bulunan bir müze kurduk. Açtığım müzelerde bulunan tüm aletleri tanıtmak amacıyla 5 ciltlik “İslam’da Bilim ve Teknik” adlı katalog eseri yazdım. Müzenin yanına aynı zamanda yaklaşık 27 bin kitap bulunan bir de kütüphane açtık.&lt;/p&gt;&lt;div src=&quot;fuat-sezgin-011.webp&quot; reference=&quot;https://www.lacivertdergi.com/soylesi/2018/09/17/islam-bilim-tarihine-omrunu-adayan-lim-fuat-sezgin&quot;&gt;&lt;/div&gt;&lt;p&gt;Bu süreçte bütün hücrelerimin dinlenmeye ihtiyacı olduğu o kadar fazla an oldu ki anlatamam! Ancak bunu hissettiğim her defasında, İslam aleminin durumu ortadayken dinlenmeye hakkımın olmadığına kendimi bir kez daha ikna ettim. Bugünü yaşayan Müslümanlarla bir yere varılamayacağını gördüm. İleride para, makam düşkünlüğü olmayan, Batı ile hesaplaşma derdi olan, tembel olmayan, muhayyel bir müslüman nesil için malzeme hazırlamaya karar verdim.&lt;/p&gt;&lt;p&gt;Memleketimin değerli gençleri; ben bu eserlerle birlikte sizleri harekete geçirmek istiyorum. Allah size hayat vermiş ancak bunu iyi kullanmıyorsunuz. İyi kullanılması için sizlere heyecan vermek istiyorum. Ben bu eserleri geleceği değiştirmek, kıpırdatmak için yapıyorum. Bu aşağılık kompleksi karşısında atalarımızın neler yaptığını, neleri başardığını dünyaya göstermeyi amaçlıyorum. Eserlerimi tüm insanlık için yapıyorum. Ama benim gizli ve esas hedefim memleketim ve milletimdir. Gayretimin bir kısmı bilim dünyasına hizmet ama diğer çok mühim bir gayesi ise; koskoca bir İslam aleminin yitirmiş olduğu kendine hürmeti, güveni ve insanlık tarihindeki yerini hatırlatmak, kaybettiklerini iade etmek içindir. Peygamberi “İki günü birbirine eşit olan insan zarardadır.” diyen bir dinin mensubusunuz. Müslümanlar bu sözü kâfi derecede göz önüne almadılar. İnsanların dikkatini buna çekmediler. Demek ki İslam dini sizden her gün yeni bir şey istiyor. Dolayısıyla günlerinizi her gün bu soruyu kendinize sorarak geçirin. Çalışın, çok daha fazla çalışın.&lt;/p&gt;&lt;div&gt;&lt;/div&gt;&lt;p&gt;Saygıdeğer Fuat Sezgin hocamız, 2018 yılında vefat etti ve İstanbul Gülhane Parkı’ndaki müzesinin yanında bulunan mezarında huzur içinde yatmakta. Peki size sormak istiyorum, Türkiye’de kaç kişi böyle bir değeri kaybetmemizin acısını yaşadı? Bizlerin 10-15 dakikada okuyup gördüğü bu hayatı, 94 yaşına kadar günde 17 saat gibi insanın sınırlarını zorlayacak bir çalışma disiplini ile ilmek ilmek dokumuş ve milletimizin özüne dönebilmesine fayda sağlayacak çok sayıda eser vermiştir. Bizlerin hedefi ise bu yolun devamını getirmektir. Umuyorum ki bu güzel yaşam hikayesini okuyup içinde kıpırdanma olan ve eyleme geçenlerden geleceğin bilim insanları yetişecek ve gelecek nesillere heyecan olacak yeni yaşam hikayeleri ortaya çıkacaktır.&lt;/p&gt;&lt;p&gt;Esen kalın.&lt;/p&gt;&lt;h2&gt;Kaynaklar&lt;/h2&gt;&lt;p&gt;[1]: &lt;a href=&quot;https://www.ibtav.org/sayfa/1/ozgecmisi&quot;&gt;İslam Bilim Tarihi Araştırmaları Vakfı Fuat Sezgin Özgeçmişi&lt;/a&gt;&lt;br/&gt;
[2]: &lt;a href=&quot;https://www.trtizle.com/filmler/fuat-sezgin&quot;&gt;TRT Fuat Sezgin Belgeseli&lt;/a&gt;&lt;br/&gt;
[3]: &lt;a href=&quot;https://www.youtube.com/watch?v=eM5xe7vO5wM&amp;amp;list=WL&amp;amp;index=2&amp;amp;t=4s&quot;&gt;Kocaeli Üniversitesi Fuat Sezgin Belgeseli&lt;/a&gt;&lt;br/&gt;
[4]: &lt;a href=&quot;https://www.youtube.com/watch?v=cRS-Yq3pQ9Y&quot;&gt;Tvnet Fuat Sezgin Belgeseli&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Terminale Biraz Renk Katalım]]></title><description><![CDATA[Ubuntu'nun varsayılan terminaline bakınca sizinde içiniz kararmıyor mu? Elbette öyle. Aslında beni farklı arayışa iten, Git kullanmaya…]]></description><link>https://enesbaspinar.me/ubuntu/terminale-renk-katalim/</link><guid isPermaLink="false">https://enesbaspinar.me/ubuntu/terminale-renk-katalim/</guid><pubDate>Tue, 16 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;div&gt;Bu yazıda izlenilecek yöntem, &lt;a class=&quot;warning-link&quot; href=&quot;https://twitter.com/rajaraodv&quot;&gt;Raja Rao DV&lt;/a&gt;&amp;#x27;nin Medium hesabında paylaştığı bir yazıdan alıntılanmıştır. Yazının orjinal haline &lt;a class=&quot;warning-link&quot; href=&quot;https://medium.com/free-code-camp/jazz-up-your-bash-terminal-a-step-by-step-guide-with-pictures-80267554cb22&quot;&gt;buradan&lt;/a&gt; ulaşabilirsiniz.&lt;/div&gt;&lt;p&gt;Ubuntu’nun varsayılan terminaline bakınca sizinde içiniz kararmıyor mu? Elbette öyle. Aslında beni farklı arayışa iten, Git kullanmaya başlamam oldu. İzlediğim videolarda ve yazılarda, baktıkça Git kullanma hissi uyandıran terminaller vardı. Birkaç araştırma sonucu anlatacağım yönteme denk geldim ve beğenerek kullanıyorum. Kullandığım ve yazı sonunda elde edeceğimiz görüntü şu şekilde olacaktır:&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-001.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;Harika, değil mi? Ubuntu’nun varsayılan terminali ile karşılaştırmak isterseniz:&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-002.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;Öyleyse değişim başlasın!&lt;/p&gt;&lt;h2&gt;Adım 1: Renk Şemasının Belirlenmesi&lt;/h2&gt;&lt;p&gt;Renk şemamızı belirleyerek başlayalım. Bu kısımda, varsayılan ya da &lt;strong&gt;&lt;a href=&quot;https://mayccoll.github.io/Gogh/&quot;&gt;Gogh&lt;/a&gt;&lt;/strong&gt; gibi platformlardan elde edebileceğimiz şemaları kullanabiliriz. Ben varsayılanlardan kullanacağım.&lt;/p&gt;&lt;p&gt;Kullanacağımız şemayı belirledikten sonra özelleştirmeler yapabiliriz. Ben “Built-in schemes” kısmından “Solarized Dark” şemasını seçtikten sonra yazı rengini beyaz ve “Palette” kısmını ise “XTerm” olarak değiştirdim:&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-003.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;“Default” profil olarak tanımlayabileceğiniz gibi yeni bir profil oluşturup onun üzerinden de yapılandırmayı gerçekleştirebilirsiniz. Bu işlemlerden sonra terminal şu şekilde gözükmelidir:&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-004.webp&quot;&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Bu kısımda terminalinizde kullanıcı adınızın solunda &lt;strong&gt;(base)&lt;/strong&gt; önekini görebilirsiniz. Bu, conda kurulumunuzdan gelen varsayılan sanal ortamdır. Yapacağımız işlemler açısından sorun teşkil etmiyor ancak &lt;code class=&quot;language-text&quot;&gt;conda deactivate&lt;/code&gt; komutunu yazarak devredışı bırakabilirsiniz. Yapacaklarımızdan sonra bu öneki gizlemiş olacağız.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;Adım 2: Powerline Kurulumu&lt;/h2&gt;&lt;p&gt;Powerline, terminale durum göstergesi ekleyen Python (python is everywhere) uygulamasıdır. Bunun için bazı ön gerekliliklere sahip olmalıyız. Gerekli paketlerimizi indirebilmemiz için kullanacağımız pip paket yükleyicisini bilgisayarımıza indirelim:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python3-pip&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ve pip üzerinden powerline’ı kuralım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pip3 &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; powerline-status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;Adım 3: Powerline Daemon’unun Bash’e Eklenmesi&lt;/h2&gt;&lt;p&gt;Terminal her açıldığında Powerline’ın gözükmesi için Powerline Daemon’u Bash dosyamıza eklememiz gerekir. Şu komutu çalıştırarak kurulduğu yeri görelim:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pip3 show powerline-status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div src=&quot;terminale-renk-katalim-005.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;Çıktıdaki “Location” özelliğinin değerini kopyalayım ve Powerline’ı aktif hale getirmek için &lt;code class=&quot;language-text&quot;&gt;.bashrc_profile&lt;/code&gt; dosyamızı açalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; ~/.bashrc_profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alt kısımda paylaştığım koddaki “{BU KISMA YAPIŞTIR}” alanını, terminalden aldığımız “Location” değeri ile değiştirelim. Ve değiştirdikten sonra tamamını kopyalayıp &lt;code class=&quot;language-text&quot;&gt;.bashrc_profile&lt;/code&gt; dosyamızın &lt;strong&gt;sonuna&lt;/strong&gt; ekleyelim.&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;powerline-daemon -q
&lt;span class=&quot;token assign-left variable&quot;&gt;POWERLINE_BASH_CONTINUATION&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;POWERLINE_BASH_SELECT&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;BU KISMA YAPIŞTIR&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;/powerline/bindings/bash/powerline.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Son satıra kendi bilginizi girdiğinizden emin olun! Bende dosyanın içeriği aşağıdaki gibidir:&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-006.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;Şimdi &lt;code class=&quot;language-text&quot;&gt;.bashrc&lt;/code&gt; dosyamızı açalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dosyanın sonuna şu ifadeyi ekleyelim (halihazırda varsa bir daha eklemenize gerek yok):&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; ~/.bashrc_profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div src=&quot;terminale-renk-katalim-007.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;Terminali kapatıp açtığımızda ekranımız aşağıdaki gibi gözükmelidir:&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-008.webp&quot;&gt;&lt;/div&gt;&lt;h2&gt;Adım 4: Kullanılacak Fontun Kurulması&lt;/h2&gt;&lt;p&gt;Sonraki aşamalarfs kolaylık sağlaması adına bir repo oluşturup içerisine gerekli dosyaları ekledim. &lt;a href=&quot;https://github.com/baspinarenes/bash-tema-dosyalari&quot;&gt;&lt;a href=&quot;https://github.com/baspinarenes/bash-tema-dosyalari&quot;&gt;https://github.com/baspinarenes/bash-tema-dosyalari&lt;/a&gt;&lt;/a&gt; reposuna gidip “Clone or Download” diyerek zip halinde indirelim.&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-009.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;İndirdiğimiz zip doyasındakileri çıkartalım ve içindeki &lt;strong&gt;Meslo LG L DZ Regular for Powerline.ttf&lt;/strong&gt; dosyasına çift tıklayalım. Ve &lt;strong&gt;Install Font&lt;/strong&gt; butonu ile fontu bilgisayara yükleyelim.&lt;/p&gt;&lt;p&gt;Bu fontu terminale eklemeliyiz. Terminal ayarlarındaki &lt;strong&gt;Text&lt;/strong&gt; sekmesinden &lt;strong&gt;Custom font&lt;/strong&gt; butonuna tıklayarak &lt;strong&gt;Meslo LG L DZ for Powerline Regular&lt;/strong&gt; fontunu seçelim. Font boyutunu istediğimiz boyuta ayarlayabiliriz, 13 bana ideal gibi geldi. Ben ek olarak terminalin o gıcık sesini kapatıyorum :)&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-010.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;Terminali kapatıp açtığımızda görüntü aşağıdaki gibi olmalıdır:&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-011.webp&quot;&gt;&lt;/div&gt;&lt;h2&gt;Adım 5: Git Durum Göstergesinin Eklenmesi&lt;/h2&gt;&lt;p&gt;Peki bu terminalde Git ile uğraşırken hangi daldayız, kaç dosya eklendi, kaçı commite hazır gibi oldukça kullanışlı bilgiler de yazsa güzel olmaz mıydı? O halde terminalimize geri dönelim ve Powerline eklentimizi indirelim:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pip3 &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; powerline-gitstatus&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Powerline nerede kuruluydu hatırlıyor musunuz? Yeniden bakmaktan zarar gelmez:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ pip3 show powerline-status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tekrardan “Location” değerini kopyalayalım:&lt;/p&gt;&lt;p&gt;İndirdiğimiz zipi çıkartalım ve klasöre girelim:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ~/Downloads/bash-tema-dosyalari-master/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Git’e ait özellikleri eklediğim dosyaları bilgisayarımızda gereken konumlara kopyalayalım (eğer önceden değişiklik yaptıysanız onlar kaybolacaktır). Ve ilgili yerlere yeniden “Location” bilgisini yapıştıralım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; default-colorscheme.json &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;BU KISMA YAPIŞTIR&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;/powerline/config_files/colorschemes/shell/default.json
&lt;span class=&quot;token comment&quot;&gt;# (Benim örneğimde: cp default-colorscheme.json /home/enesbaspinar/.local/lib/python3.8/site-packages/powerline/config_files/colorschemes/shell/default.json)&lt;/span&gt;

$ &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; default-themes.json &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;BU KISMA YAPIŞTIR&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;/powerline/config_files/themes/shell/default.json
&lt;span class=&quot;token comment&quot;&gt;# (Benim örneğimde: cp default-themes.json /home/enesbaspinar/.local/lib/python3.8/site-packages/powerline/config_files/themes/shell/default.json)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Son olarak şu komutu çalıştıralım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ powerline-daemon --replace&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Terminali yeniden başlattığınızda her şeyin hazır olduğunu görebilirsiniz.&lt;/p&gt;&lt;div src=&quot;terminale-renk-katalim-012.webp&quot;&gt;&lt;/div&gt;&lt;p&gt;Yazımız burada bitti. Yeni yazılarda görüşmek üzere, esen kalın.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Pointer'landıramadıklarımızdan Mısınız?]]></title><description><![CDATA[Yazılımın başında C, C++ gibi dillere denk geldiyseniz bu kavramdan kaçışınız yoktur. Ancak bir türlü kafamıza oturmaz. Artık pointer'ları…]]></description><link>https://enesbaspinar.me/genel-programlama/pointerlandiramadiklarimizdanmisiniz/</link><guid isPermaLink="false">https://enesbaspinar.me/genel-programlama/pointerlandiramadiklarimizdanmisiniz/</guid><pubDate>Mon, 15 Jun 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Yazılımın başında C, C++ gibi dillere denk geldiyseniz bu kavramdan kaçışınız yoktur. Ancak bir türlü kafamıza oturmaz. Artık pointer’ları herkesin anlayabileceği bir seviyeye çekelim.&lt;/p&gt;&lt;h2&gt;Değişkenler Nereye ve Nasıl Kaydedilir?&lt;/h2&gt;&lt;p&gt;Programlamanın bir aşamasında “Tanımladığımız değişkenler nereye gidiyor?” diye hepimiz düşünmüşüzdür. Cevap basit: RAM belleğe.&lt;/p&gt;&lt;p&gt;RAM bellek, alt alta kutular şeklinde tasvir edilir denk gelmişseniz. Her biri 8 bit yani 1 bayt yer kaplayan kutula halinde. 1 GB kapasitesi olan RAM’de 1.073.741.824 adet kutu vardır. Bu da 4 bayt yer tutan tamsayılar ile dolduracak olursak maksimum 268.435.456 adet tam sayı saklayabileceğimiz anlamına gelir. Her bir kutunun kendine özel, bellekte bulundukları konumu tarif eden adresi vardır. Bu sayede CPU kutulara veri yerleştirebilir ve yerleştirdiği verilere sonradan erişebilir.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Adresler sayıdır ancak bildiğimiz sayılardan değil. 16’lık (hexadecimal) tabanda ifade edilirler.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Örneklendirmeye bir tam sayı değişkeni tanımlayarak başlayalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-c line-numbers&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; dogum_tarihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1999&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Şunu anlamakta yarar var: bellekteki her değere adresi ile erişim sağlarız. Ancak programlama dillerinde bununla uğraşmamıza gerek bırakmayan değişken kavramı vardır. Biz bu ismi verdiğimizde CPU hangi adrese bakacağını anlar. Örnekteki &lt;code class=&quot;language-text&quot;&gt;dogum_tarihi&lt;/code&gt; dediğimizde CPU “He tamam, bu 1999 değerini istiyor.” der.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Günlük yaşantımızda sayıları 10 tabanında (decimal) kullanıyoruz. Ancak bilgisayarlar bunları anlayabilmek için 2 tabanına (binary) çevirmek zorunda. Bellek temsillerinde ise nedenini bulamadım ancak 16 tabanını (hexadecimal) kullanılıyor. Aşağıda 1999 değerinin bu tabanlardaki halini görebilirsiniz:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-001.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Değişkenin bellekteki şekline bakalım. 16 tabanındaki karşılığını sırayla kutulara ikişerli olarak yerleştiririz:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-002.png&quot;&gt;&lt;/div&gt;&lt;p&gt;İkişerli yerleştirme sebebimiz, 2’lik tabandaki her 8 bite karşılık 16’lık tabanda 2 karaktere karşılık gelmesidir. Ve bu kısma özel bir isim vererek &lt;strong&gt;dogum_tarihi&lt;/strong&gt; dedik:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-003.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Artık biz &lt;strong&gt;dogum_tarihi&lt;/strong&gt; değişkenini çağırdığımız zaman, CPU belleğe gider ve değişkenin başlangıcı adresi olan &lt;strong&gt;90000008&lt;/strong&gt; adresine uğrar. Değişken int ise 4 bayt olacaktır. Dolayısıyla 4 kutu okur ve birleştirir. Yani &lt;strong&gt;00 00 07 CF&lt;/strong&gt; değerini elde eder ve 10 tabanına çevirerek 1999 sayısını verir.&lt;/p&gt;&lt;h2&gt;Bellek Adresini Bilmek Ne İşimize Yarar?&lt;/h2&gt;&lt;p&gt;Verinin kendisi yerine adresini kullanmak, onu kopyalamadan birden fazla yerden erişim sağlayabilmemizi ve değişiklik yapabilmemizi sağlar. Bellekte gereksiz yer işgalini önlemiş oluruz.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Bir otonom araba hayal edin. Kameradan gelen görüntüler belleğe kaydediliyor ve birden fazla programda kullanılıyor. Bir program bu görüntüler ile yolu takip ediyor, bir diğeri yayaları takip ediyor, başka bir tanesi ise trafik ışıklarını takip ediyor. Şimdi her program için görüntüleri kopyaladığımızı düşünün. Görüntülerin kaplayacağı alan birden 3 katına çıktı. Şimdi bir de bu programlara yalnızca resimlerin adreslerini verdiğinizi hayal edin. Her biri ordan alıp işini görebilir. Ne bellek doldurulmuş olur ne de programlar veriden mahrum kalmış olur.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;Değişkenlerin Adreslerini Nasıl Elde Ederiz?&lt;/h2&gt;&lt;p&gt;Burada devreye, bellek adresi tutan değişkenler girer. Değerleri nasıl değişkenlerde depolayabiliyorsak bellek adreslerini de aynı şekilde depolayabiliriz. Bunu gerçekleştiren yapılara &lt;code class=&quot;language-text&quot;&gt;pointer&lt;/code&gt; denir. Aslında &lt;strong&gt;pointer&lt;/strong&gt;‘da bir değişkendir.&lt;/p&gt;&lt;p&gt;Önceki kısımda görsel olarak anlattığımız örneği kodlama ortama dökelim. İlk olarak değişken tanımımızı yapalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; dogum_tarihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dediğimiz gibi &lt;strong&gt;dogum_tarihi&lt;/strong&gt; 1999 tamsayı değerini depoluyor. Şimdi bu değerin bellekteki adresini elde edelim:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 1. tanımlama biçimi&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; dogum_tarihi_ptr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;dogum_tarihi&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// 2. tanımlama biçimi (atamayı daha sonra yap)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; dogum_tarihi_ptr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
dogum_tarihi_ptr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;dogum_tarihi&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// yıldız yok dikkat edin.&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Pointer’ları belli etmek için genellikle ismin başına veya sonuna “p”, “ptr” gibi eklemeler yapılır.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Şimdi bu sözdizimini inceleyelim.&lt;/p&gt;&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;dogum_tarihi_ptr&lt;/code&gt; değişkenimizin türü, göreceğimiz üzere &lt;code class=&quot;language-text&quot;&gt;int*&lt;/code&gt;. Bu da bize tamsayı değişkenin adresini tutan pointer olduğunu gösterir. Değişkenin başına koyduğumuz &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&lt;/code&gt; işareti ise değişkenimizin adresini elde etmemize yarayan &lt;strong&gt;address-of&lt;/strong&gt; operatörüdür. Yani &lt;code class=&quot;language-text&quot;&gt;&amp;amp;dogum_tarihi&lt;/code&gt;, &lt;strong&gt;dogum_tarihi&lt;/strong&gt; değişkeninin bellekteki adresidir.&lt;/p&gt;&lt;p&gt;Şöyle genel biçimde tekrar edecek olursak; &lt;strong&gt;dogum_tarihi_ptr&lt;/strong&gt; &lt;strong&gt;pointer&lt;/strong&gt; değişkeni, &lt;strong&gt;dogum_tarihi&lt;/strong&gt; değişkeninin bellek adresini işaret eder:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-004.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Şu iki çıktıya bakarsak &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&lt;/code&gt; işaretinin ne işe yaradığı daha net anlaşılabilir:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dogum_tarihi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// bellek adreslerini yazdırmak için&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// özel %p belirteci kullanılır.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;dogum_tarihi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dogum_tarihi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;1999
0x7ffd83c692bc
0x7ffd83c692bc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hemen toparlayalım. &lt;strong&gt;dogum_tarihi&lt;/strong&gt; ifadesi, bildiğimiz &lt;strong&gt;int&lt;/strong&gt; değişkenidir. Ve 1999 sayısını depolar. &lt;code class=&quot;language-text&quot;&gt;&amp;amp;dogum_tarihi&lt;/code&gt; ifadesi, değişkenimizin adresidir. &lt;strong&gt;dogum_tarihi_ptr&lt;/strong&gt; ifadesi ise elde ettiğimiz adresi depoladığımız değişkendir. Tipi ise &lt;strong&gt;int*&lt;/strong&gt; dir. Yani değişken adresi depolayan değişken diyebiliriz :)&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Bu kısmı tamamlarken bir noktaya daha değinmekte fayda görüyorum. Pointer tanımlarken &lt;code class=&quot;language-text&quot;&gt;int *dogum_tarihi_ptr&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;int* dogum_tarihi_ptr&lt;/code&gt; sözdimlerinden herhangi birini kullanabiliriz. Yıldızın sabit konumu yoktur, sadece tip ile değişken ismi arasında olmalıdır. Ancak C/C++ programcıları geleneksel olarak &lt;code class=&quot;language-text&quot;&gt;int *dogum_tarihi_ptr&lt;/code&gt; yazımını kullanılır. Bunun sebebi aşağıdaki kullanımda yarattığı kafa karışıklığıdır:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; ptr_a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ptr_b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Buradaki iki değişkeninde pointer olacağını düşünüyorsunuz değil mi? Ancak &lt;code class=&quot;language-text&quot;&gt;ptr_a&lt;/code&gt; pointer iken &lt;code class=&quot;language-text&quot;&gt;ptr_b&lt;/code&gt; int değerdir. Şu şekilde yazılmış gibi kabul edilir:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; ptr_a&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; ptr_b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bu yüzden aşağıdaki şekilde kullanırsak, herhangi bir sorun oluşmaz:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;ptr_a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ptr_b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Değişken ismine bitişik olduğu için değişkene ait olduğundan emin oluruz.&lt;/p&gt;&lt;h2&gt;Adresler ile Değişken Değerlerine Erişmek&lt;/h2&gt;&lt;p&gt;Değişkenin adresini elde edebileceğimiz gibi adres yardımıyla değişken değerine de erişebiliriz. Şu görsele göz atalım ve sonrasında birlikte inceleyelim:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-005.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Örneğin elimizdeki doğum tarihi bilgisini kullanıcının yanlış girmiş. Bunu değiştirmek istiyor. Elimizde hem değişken hem de adresini tutan &lt;strong&gt;pointer&lt;/strong&gt; var:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; dogum_tarihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dogum_tarihi_ptr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;dogum_tarihi&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Değişkenlerin değerini nasıl değiştirebileceğimizi zaten biliyorduk:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;dogum_tarihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1990&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;“Peki neden hala o yöntemle değiştirmeye devam etmiyoruz?” diyorsanız çoğunlukla öyle yapacak olacak olsakta bazı zamanlar gelecek ki &lt;br/&gt;&lt;strong&gt;pointer&lt;/strong&gt; kullanmak zorunda kalacağız. İleride göreceğiz.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Artık pointer vasıtasıyla da değiştirebiliriz:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dogum_tarihi_ptr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1990&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dogum_tarihi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dogum_tarihi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;0x7ffc0206d83c  // başındaki &amp;quot;0x&amp;quot; hexadecimal olduğunu belirtir.
1990&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Burada kafalar çorba olabiliyor. &lt;strong&gt;Pointer&lt;/strong&gt; tanımlanırken kullanılan &lt;em&gt; işareti, onun pointer olduğunu belirtmek için konur ve başka amacı yoktur. Ancak tanımlandıktan sonra kullanacağımız her &lt;/em&gt; işareti, &lt;strong&gt;pointer&lt;/strong&gt;‘ın işaret ettiği adresteki değeri temsil eder. Buradaki yıldız işaretine &lt;strong&gt;dereference operator&lt;/strong&gt; denir.&lt;/p&gt;&lt;h2&gt;Adresler ile Dizi Elemanlarına Erişmek&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;Bu kısma geçmeden önce küçük bir ipucu vermek istiyorum. String değişkenler tanımlarken &lt;code class=&quot;language-text&quot;&gt;char[] isim = &amp;quot;Ahmet&amp;quot;&lt;/code&gt; şeklindeki bir kullanıma denk gelmişsinizdir. C’de aslında string diye bir tip yoktur. Son elemanının &lt;strong&gt;\0&lt;/strong&gt; karakteri olan karakter dizileri ile ifade edilirler. Yani bu anlatacaklarım onlar için de geçerli olacak.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Dizi isimleri farklı kullanımlarda farklı anlam ifade edebilirler. &lt;strong&gt;Pointer&lt;/strong&gt; kavramı, dizileri anlamak için önemlidir. Bu sebeple bir dizi oluşturup &lt;strong&gt;pointer&lt;/strong&gt; ile ilişkisini görelim:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dizinin ismi, ilk elemanın adresini tutar. Dolayısıyla pointer gibi davranır. Aşağıdaki çıktılara bakacak olursak bunu net bir şekilde görebiliriz:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;token comment&quot;&gt;//dizinin ismi&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;token comment&quot;&gt;//dizinin adresi&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//ilk elemanın adresi&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;0x7ffcd4fb610c
0x7ffcd4fb610c
0x7ffcd4fb610c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Üçünün de aynı olduğunu ve diziye erişeceğimiz adresi verdiklerini görebiliriz. Özetleyecek olursak; diziler, temel veri tipleri gibi değer tutmak yerine dizinin ilk elemanının adresini tutar. Bunu &lt;code class=&quot;language-text&quot;&gt;sayi_dizisi&lt;/code&gt; ifadesini yazdırarak görebiliriz. &lt;code class=&quot;language-text&quot;&gt;&amp;amp;sayi_dizisi&lt;/code&gt; dediğimizde dizinin adresini elde ederiz. Ve dizinin ilk elemanı ile aynıdır. Son olarak &lt;code class=&quot;language-text&quot;&gt;&amp;amp;sayi_dizisi[0]&lt;/code&gt; ifadesiyle dizimizin ilk elemanının adresine bakıyoruz ki ki bu da aynıdır.&lt;/p&gt;&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;printf()&lt;/code&gt; ile kullandığımızda dizinin adresini ifade eder ancak bazı durumlarda da dizinin değerini temsil eder. Örneğin &lt;code class=&quot;language-text&quot;&gt;sizeof()&lt;/code&gt; fonksiyonuna gönderirsek, pointer boyutunu değil dizi değerinin boyutunu verecektir:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 4 bayt * 3 = 12 bayt&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Yani adresi yerine gerçek diziyi kullandığımız anlamına gelir.&lt;/p&gt;&lt;h2&gt;Pointer Aritmetiği&lt;/h2&gt;&lt;p&gt;Kullandığımız diziyi tekrardan hatırlayalım ve adresini tutan ekstra bir pointer oluşturalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;sayi_dizisi_ptr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// &amp;amp;sayi_dizisi de yazılabilir&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sayi_dizisi&lt;/code&gt; zaten adres tutuyordu değil mi? İkinci bir yerde daha tutmak için &lt;code class=&quot;language-text&quot;&gt;sayi_dizisi_ptr&lt;/code&gt; &lt;strong&gt;pointer&lt;/strong&gt;‘ını oluşturduk.&lt;/p&gt;&lt;p&gt;Dizimizin bellekteki durumunu görselleştirelim:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-006.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Dizilerin elemanlarına erişmek için indeksleri kullanıyorduk (bir sonraki kısımda karşılaştıracağız). Ancak arkada neler dönüyor merak ediyoruz. İşte bunu &lt;strong&gt;pointer&lt;/strong&gt; yardımıyla anlayabiliriz.&lt;/p&gt;&lt;p&gt;Her bir elemana dizi adresine uyguladığımız aritmetik işlemler ile erişiyoruz. Şu örneğe bakalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ilk adres: %p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ilk eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

sayi_dizisi_ptr &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ikinci adres: %p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ikinci eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

sayi_dizisi_ptr &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;son adres: %p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;son eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;ilk adres: 0x7ffcd4fb610c
ilk eleman: 10
ikinci adres: 0x7ffcd4fb6110
ikinci eleman: 20
son adres: 0x7ffcd4fb6114
son eleman: 30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;İsmin ilk öğeye işaretçi olduğunu söylemiştik. Dolayısıyla &lt;code class=&quot;language-text&quot;&gt;*array_ptr&lt;/code&gt; dediğimizde ilk öğeyi verdiğini biliyoruz. Bu kısım tamam. Peki &lt;code class=&quot;language-text&quot;&gt;array_ptr += 1;&lt;/code&gt; ne anlama geliyor?&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Pointer&lt;/strong&gt;‘a 1 eklediğimizde bir sonraki kutunun adresini tutmasını istiyoruz.&lt;/p&gt;&lt;p&gt;Biraz kafalar karışmış olabilir. Bu tarz şeylere görsellik katmadan anlamak zordur bilirim. İkinci elemana ulaşmak için adrese 1 eklediğimizde olacak şey böyledir:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-007.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Göreceğimiz gibi 1 eklediğimizde esasen &lt;code class=&quot;language-text&quot;&gt;1*sizeof(int)&lt;/code&gt; demek isteriz. &lt;strong&gt;int&lt;/strong&gt; olmasının sebebi dizinin elemanlarının tam sayı olmasıdır. Tam sayı boyutunun 4 bayt olduğundan bahsetmiştik. Yani 4 kutu. 1 eklemek istediğimizde 4 kutu sonraya git demiş oluruz. Yani &lt;code class=&quot;language-text&quot;&gt;sayi_dizisi_ptr&lt;/code&gt; &lt;strong&gt;pointer&lt;/strong&gt; değişkeni artık 0x7ffcd4fb6110 adresini depolayacak. Bunu yapma sebebimiz ise diğer elemanın adresine erişmek. Tekrardan 1 eklediğimizde de aynı işlemler uygulanır ve adres 0x7ffcd4fb6114 olur.&lt;/p&gt;&lt;p&gt;Direk olarak 3. elemana erişmek isteseydik &lt;code class=&quot;language-text&quot;&gt;2*sizeof(int)&lt;/code&gt;, yani 2 eleman sonraya git diyebilirdik:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-008.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Bu sefer sonraki 8. kutuya giderek 30 değerinin adresine sahip olurdu.&lt;/p&gt;&lt;p&gt;Açıklaması biraz uzun sürmüş olabilir. Ama kafanızda netleşeceğini düşünüyorum. Anlayıp anlamadığınızı bir sorgulayın. Eğer anladıysanız devam, anlamadıysanız editörü açın ve bir takım C/C++ deneyleri yapın.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Söylememe gerek var mı bilmiyorum ancak pointer’a tekrar atama yaptığımız için adres değişir diyoruz. Yani &lt;code class=&quot;language-text&quot;&gt;sayi_dizisi_ptr += 1;&lt;/code&gt; ifadesi adresi kalıcı olarak değiştirir. Sonraki adresi yazdırmak amacıyla &lt;code class=&quot;language-text&quot;&gt;sayi_dizisi_ptr + 1;&lt;/code&gt; ifadesini kullansaydık adresin değeri değişmezdi. Oradaki &lt;code class=&quot;language-text&quot;&gt;=&lt;/code&gt; kritik öneme sahip.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Son işlemin ardından artık &lt;code class=&quot;language-text&quot;&gt;sayi_dizisi_ptr&lt;/code&gt; sonuncu elemanın adresini tutacaktır:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;adres: %p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;adres: 0x7ffcd4fb6114
eleman: 30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Peki tekrardan 2. elemana ulaşmak istersek? Çocuk oyuncağı. Toplama yerine çıkarma yaparak önceki kutulara gideceğiz:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;sayi_dizisi_ptr &lt;span class=&quot;token operator&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;adres: %p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;sayi_dizisi_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;adres: 0x7ffcd4fb6110
eleman: 20&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Artık pointer ile toplama ve çıkarma yapmanın ne anlama geldiğini benimsediğimizi düşünüyorum. Bunu anlamak önemli.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Bu kısımdan bir çıkarım yapacak olursak, dizi tanımlamak için ilk elemanın adresini ve eleman sayısını bilmemizin yeterli olacağını anlayabiliriz. Bunu anladığınızda dizi tanımlamak çok daha kolay hale gelir.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;İndekslerin Pointer Aritmetiğindeki Karşılıkları&lt;/h2&gt;&lt;p&gt;Az önceki kısımda anlattığımız dizi elemanlarını elde etmek işlemini pointerlara girmeden önce indeksler ile kolayca yapabiliyorduk:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ilk eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ikinci eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;son eleman: %i\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;ilk eleman: 10
ikinci eleman: 20
son eleman: 30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ancak bazen pointerlara ihtiyacımız olur. O yüzden indekslere karşılık gelen pointer ifadelerine göz gezdireceğiz. Yukarıdaki kodu indeksler yerine pointer aritmetiği kullanılarak yeniden yazalım&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// İlk ifade, *(sayi_dizisi) ve&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// *(sayi_dizisi + 0) ile tamamen aynıdır.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ilk eleman: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;ikinci eleman: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sayi_dizisi &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;son eleman: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sayi_dizisi &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;ilk eleman: 10
ikinci eleman: 20
son eleman: 30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ancak bu kısımda dikkat etmemiz gereken bir şey var. Bir dizinin 2. elemanının adresini depolayan bir &lt;strong&gt;pointer&lt;/strong&gt; tanımlayalım. Ve indeks 1’deki değere bakalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;yeni_sayi_dizisi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// ya da (sayi_dizisi + 2)&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; yeni_sayi_dizisi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;30 sonucunu alırız. Çünkü dizimiz artık şu hale gelecektir:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-009.png&quot;&gt;&lt;/div&gt;&lt;p&gt;Dolayısıyla ilk eleman artık 30 olacaktır (başlangıçtan 4 kutu sonrası olarak hayal ediyorduk hatırlayın).&lt;/p&gt;&lt;h2&gt;Fonksiyonlar ile Pointer İlişkisi&lt;/h2&gt;&lt;p&gt;Bir fonksiyon içerisinde değişkenlerin değerini değiştirmek istediğimizi düşünelim. Bunun için bir örnek oluşturalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;kare_al&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   n &lt;span class=&quot;token operator&quot;&gt;*=&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Fonksiyon içinde sayı: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; sayi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Fonksiyon öncesinde sayı: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Fonksiyondan return edilen sayı: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;kare_al&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sayi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Fonksiyon sonrasında sayı: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;Fonksiyon öncesinde sayı: 12
Fonksiyon içinde sayı: 144
Fonksiyondan return edilen sayı: 144
Fonksiyon sonrasında sayı: 12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Burada fonksiyona gönderilen &lt;code class=&quot;language-text&quot;&gt;sayi&lt;/code&gt; değişkeninin &lt;code class=&quot;language-text&quot;&gt;n&lt;/code&gt; isminde kopyası oluşturulur ve bellekte yer işgal eder. Yapılan işlemlerin orjinal değişken üzerinde etkisi olmaz. Yeni değer yalnızca &lt;code class=&quot;language-text&quot;&gt;return&lt;/code&gt; ile çağrıldığı yere döndürülebilir.&lt;/p&gt;&lt;p&gt;Peki ya argümanı alırken pointer kullanırsak ne olurdu?&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;kare_al&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;n &lt;span class=&quot;token operator&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// adresteki sayıyı kendisiyle çarpıyoruz&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Fonksiyon içinde sayı: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; sayi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Fonksiyon öncesinde sayı: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;kare_al&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;sayi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;Fonksiyon sonrasında sayı: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;Fonksiyon öncesinde sayı: 12
Fonksiyon içinde sayı: 144
Fonksiyon sonrasında sayı: 144&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Farkı net bir şekilde görebilirsiniz. Fonksiyona değişkenin adresini gönderdiğimizde yapılan işlemler orjinal değişkeni değiştirir. Adresteki içeriğin karesi alır ve adresin içeriği değiştirilir. Fonksiyon sonrasında o adrese bakacak olursak değiştiğini görürüz.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Bu özelliğin yararı çok fazladır. Örneğin çok sayıda veri üzerinde çalışıyorsunuz, mesela 100.000 adet resmimiz var. Ve bu resimleri nesne tespitini yapacak fonksiyona göndermek istiyoruz. Ancak &lt;strong&gt;pointer&lt;/strong&gt; olmasaydı ve hepsinin kopyasını göndermiş olsaydık, bellekte 200.000 resim depolanmış olurdu. Muazzam bir yer işgali olacaktır ve performans düşecektir. Bu sebeple, sadece adresin içeriğinde değişiklik yapmak faydalıdır. Her yerden orjinal içeriğe erişebiliriz.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Peki dizi göndermek istesek ne olurdu? Dizi isimlerinin pointer olduğundan bahsetmiştik. Diziyi fonksiyona kabul ederken parametre olarak tanımlayabileceğimiz ve temelde aynı olan 2 seçeneğimiz var.&lt;/p&gt;&lt;p&gt;Birincisi dizi olarak almak:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sayilara_5_ekle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; dizi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;İkincisi ise pointer olarak almak:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sayilara_5_ekle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dizi&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// önerilen budur&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bunların ikisi de adresler ile işlem yapacağından aynıdır ve orjinal diziyi değiştirirler. Örneğimize bakalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sayilara_5_ekle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dizi&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; dizi_uzunlugu&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; dizi_uzunlugu&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
       dizi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; sayilar&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;sayilara_5_ekle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sayilar&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

   &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%d &amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sayilar&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;6 13 8 12 10&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ancak pointer olarak atamak içeriğini değiştirmek istemediğimiz durumlarda (mesela örnekteki gibi en büyük elemanı bulmak istersek) risk oluşturur. Ya yanlışlıkla değiştirirsek? İstenmeyen veri kayıpları olabilir. Bundan kaçınmak için içeriğin değiştirilemeyeceğini belirten &lt;code class=&quot;language-text&quot;&gt;const&lt;/code&gt; anahtar kelimesini kullanabiliriz:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token macro property&quot;&gt;&lt;span class=&quot;token directive-hash&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;token directive keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;en_buyuk_deger_bul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;dizi&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; dizi_uzunlugu&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; en_buyuk_deger &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dizi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; dizi_uzunlugu&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;en_buyuk_deger &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; dizi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        en_buyuk_deger &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dizi&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; en_buyuk_deger&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; sayilar&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;En büyük sayi: %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;en_buyuk_deger_bul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sayilar&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;En büyük sayi: 8&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;Matruşka Pointer’lar&lt;/h2&gt;&lt;p&gt;Bunu sona bırakmak istedim. Pointer’ın en çok kafa karıştıran kısmıdır. Basitçe anlatmaya çalışacağım.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;pointer&lt;/strong&gt; değişkenin adres depoladığını artık biliyoruz. Elbette &lt;strong&gt;pointer&lt;/strong&gt; değişkenlerde bellekte depolanır. Bu sebeple &lt;strong&gt;pointer&lt;/strong&gt; adresi tutan &lt;strong&gt;pointer&lt;/strong&gt; oluşturmak mümkündür. Bir değişken ve &lt;strong&gt;pointer&lt;/strong&gt; oluşturalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; yas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;yas_ptr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;yas&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Şimdi bu &lt;strong&gt;pointer&lt;/strong&gt;‘ın adresini depolayan bir &lt;strong&gt;pointer&lt;/strong&gt; daha oluşturalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;yas_ptr_ptr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;yas_ptr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bu da ne, hani tek yıldız ile oluşturuluyordu? Sakin. Hala tek yıldız ile oluşturuluyor. Yukarıda &lt;code class=&quot;language-text&quot;&gt;int **yas_ptr_ptr&lt;/code&gt; ismini &lt;code class=&quot;language-text&quot;&gt;int** yas_ptr_ptr&lt;/code&gt; olarak ifade ederek analize başlayalım. &lt;code class=&quot;language-text&quot;&gt;int&lt;/code&gt; tipinde &lt;code class=&quot;language-text&quot;&gt;yas&lt;/code&gt; değişkenin adresini bir &lt;strong&gt;pointer&lt;/strong&gt;‘a atarsak bunun tipinin &lt;code class=&quot;language-text&quot;&gt;int*&lt;/code&gt; olduğunu gördük. Şimdi ise &lt;code class=&quot;language-text&quot;&gt;int*&lt;/code&gt; tipini tutan pointer oluşturmuş oluruz. Yeni değişkenimizin tipi ise &lt;code class=&quot;language-text&quot;&gt;int**&lt;/code&gt; olur. Şimdi biraz daha netleşti değil mi?&lt;/p&gt;&lt;p&gt;Yeni &lt;strong&gt;pointer&lt;/strong&gt; ile ilgili birkaç çıktıya bakalım:&lt;/p&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;cpp&quot;&gt;&lt;pre style=&quot;counter-reset:linenumber 0&quot; class=&quot;language-cpp line-numbers&quot;&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; yas_ptr_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%p\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;yas_ptr_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;quot;%d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;yas_ptr_ptr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;line-numbers-rows&quot; style=&quot;white-space:normal;width:auto;left:0&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;result&quot;&gt;&lt;pre class=&quot;language-result&quot;&gt;&lt;code class=&quot;language-result&quot;&gt;0x7fffd4e80798
0x7fffd4e80794
50&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;İlk satırı biliyoruz &lt;code class=&quot;language-text&quot;&gt;yas_ptr_ptr&lt;/code&gt;‘in adresini yazdırdı. İkinci satırda ise bu &lt;strong&gt;pointer&lt;/strong&gt;‘ın değerini, yani &lt;code class=&quot;language-text&quot;&gt;yas_ptr&lt;/code&gt; değişkeninin adresini yazdırdık. Son satırda ise &lt;code class=&quot;language-text&quot;&gt;yas_ptr_ptr&lt;/code&gt; &lt;strong&gt;pointer&lt;/strong&gt; değişkeninin adresini depoladığı &lt;code class=&quot;language-text&quot;&gt;yas_ptr&lt;/code&gt; &lt;strong&gt;pointer&lt;/strong&gt; değişkeninin adresinin içerisinde bulunan değeri yazdırmış olduk. Görsel olarak da eklemiş olayım:&lt;/p&gt;&lt;div src=&quot;pointerlandiramadiklarimizdanmisiniz-010.png&quot;&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;p&gt;Yazımız burda bitti. Yeni yazılarda görüşmek üzere, esen kalın.&lt;/p&gt;&lt;h2&gt;Kaynaklar&lt;/h2&gt;&lt;p&gt;[1]: &lt;a href=&quot;https://boredzo.org/pointers/&quot;&gt;https://boredzo.org/pointers/&lt;/a&gt;&lt;br/&gt;
[2]: &lt;a href=&quot;https://computer.howstuffworks.com/c23.htm&quot;&gt;https://computer.howstuffworks.com/c23.htm&lt;/a&gt;&lt;br/&gt;
[3]: &lt;a href=&quot;https://www3.ntu.edu.sg/../cp4_PointerReference.html&quot;&gt;https://www3.ntu.edu.sg/home/ehchua/programming/genel/cp4_PointerReference.html&lt;/a&gt;&lt;/p&gt;</content:encoded></item></channel></rss>